<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.mybatis.dao.EmployeeMapperPlus">
	
	<!-- 自定义某个JavaBean的封装规则 -->
	<resultMap type="com.atguigu.mybatis.bean.Employee" id="myEmp">
		<!-- 指定主键列的封装规则:底层会有优化 -->
		<id column="id" property="id"/>
		<!-- 其它列名与属性名一致的字段可不定义 -->
		<result column="last_name" property="lastName"/>
		<result column="gender" property="gender"/>
		<result column="email" property="email"/>
	</resultMap>
	
	<!-- resultMap:自定义结果集映射规则 -->
	<select id="getEmpById" resultMap="myEmpDis">
		select * from tbl_employee where id = #{id}
	</select>
	
	<!-- 联合查询：使用级联属性封装结果集 -->
	<resultMap type="com.atguigu.mybatis.bean.Employee" id="myDifEmp">
		<id column="id" property="id"/>
		<result column="last_name" property="lastName"/>
		<result column="gender" property="gender"/>
		<result column="email" property="email"/>
		<result column="did" property="dept.id"/>
		<result column="dept_name" property="dept.deptName"/>
	</resultMap>
	
	<!-- 使用association标签指定关联的单个JavaBean的封装规则 -->
	<resultMap type="com.atguigu.mybatis.bean.Employee" id="myDifEmp2">
		<id column="id" property="id"/>
		<result column="last_name" property="lastName"/>
		<result column="gender" property="gender"/>
		<result column="email" property="email"/>
		<association property="dept" javaType="com.atguigu.mybatis.bean.Department">
			<id column="did" property="id"/>
			<result column="dept_name" property="deptName"/>
		</association>
	</resultMap>	
	<select id="getEmpAndDept" resultMap="myDifEmp2">
		SELECT
			e.id 		AS id,
			e.last_name AS lastName,
			e.gender 	AS gender,
			e.email 	AS email,
			e.d_id 		AS d_id,
			d.id 		AS did,
			d.dept_name AS dept_name 
		FROM
			tbl_employee e
			LEFT JOIN tbl_dept d ON e.d_id = d.id 
		WHERE
			e.id = #{id}
	</select>
	
	<!-- 
		1.使用association标签进行分步查询 
	    2.也与全局配置搭配使用延迟加载
	-->
	<resultMap type="com.atguigu.mybatis.bean.Employee" id="myEmpByStep">
		<id column="id" property="id"/>
		<result column="last_name" property="lastName"/>
		<result column="gender" property="gender"/>
		<result column="email" property="email"/>
		<association property="dept" select="com.atguigu.mybatis.dao.DepartmentMapper.getDeptById" column="d_id">
			<id column="did" property="id"/>
			<result column="dept_name" property="deptName"/>
		</association>
	</resultMap>
	<select id="getEmpByIdStep" resultMap="myEmpByStep">
		select * from tbl_employee where id = #{id}
	</select>
	
	<select id="getEmpsByDeptId" resultType="com.atguigu.mybatis.bean.Employee">
		select * from tbl_employee where d_id = #{deptId}
	</select>
	
	<resultMap type="com.atguigu.mybatis.bean.Employee" id="myEmpDis">
		<id column="id" property="id"/>
		<result column="last_name" property="lastName"/>
		<result column="gender" property="gender"/>
		<result column="email" property="email"/>
		<!-- 
			鉴别器：mybatis可以使用鉴别器判断某列的值，然后根据某列的值来改变封装行为
			column:指定要判断的列名
		 -->
		<discriminator javaType="string" column="gender">
			<case value="1" resultType="com.atguigu.mybatis.bean.Employee">
				<!-- 如果是女生则封装部门信息 -->
				<association property="dept" select="com.atguigu.mybatis.dao.DepartmentMapper.getDeptById" column="d_id">
					<id column="id" property="id"/>
					<result column="deptName" property="deptName"/>
				</association>
			</case>
			<!-- 如果是男生,将last_name列赋值给email列 -->
			<case value="0" resultType="com.atguigu.mybatis.bean.Employee">
				<id column="id" property="id"/>
				<result column="last_name" property="lastName"/>
				<result column="gender" property="gender"/>
				<result column="last_name" property="email"/>
			</case>
		</discriminator>
	</resultMap>
</mapper>